<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Automotive on Cr0w&#39;s Place</title>
    <link>https://cr0wtom.github.io/tags/automotive/</link>
    <description>Recent content in Automotive on Cr0w&#39;s Place</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Thomas Sermpinis</copyright>
    <lastBuildDate>Fri, 30 Jun 2023 16:56:46 +0100</lastBuildDate><atom:link href="https://cr0wtom.github.io/tags/automotive/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Research/Talks - TROOPERS23 - Horror Stories from the Automotive Industry</title>
      <link>https://cr0wtom.github.io/projects/research-talks-horror-stories-troopers23/</link>
      <pubDate>Fri, 30 Jun 2023 16:56:46 +0100</pubDate>
      
      <guid>https://cr0wtom.github.io/projects/research-talks-horror-stories-troopers23/</guid>
      <description>In this talk, we will revisit some of the scariest stories we faced during more than 50 penetration testing and security research projects, with a twist. In the ever-emerging industry of automotive, with old and new OEMs trying to get a share of the pie, many things are at stake, with many things getting overlooked, forgotten, or even deliberately covered. We will go through a journey of critical findings in different targets and the constant battle between penetration testers, developers, and mid to upper management.</description>
    </item>
    
    <item>
      <title>Research/Talks - TROOPERS23 - Horror Stories from the Automotive Industry</title>
      <link>https://cr0wtom.github.io/projects/research-talks-horror-stories/</link>
      <pubDate>Fri, 30 Jun 2023 16:56:46 +0100</pubDate>
      
      <guid>https://cr0wtom.github.io/projects/research-talks-horror-stories/</guid>
      <description>In this talk, we will revisit some of the scariest stories we faced during more than 50 penetration testing and security research projects, with a twist. In the ever-emerging industry of automotive, with old and new OEMs trying to get a share of the pie, many things are at stake, with many things getting overlooked, forgotten, or even deliberately covered. We will go through a journey of critical findings in different targets and the constant battle between penetration testers, developers, and mid to upper management.</description>
    </item>
    
    <item>
      <title>Research/Talks - UDS Fuzzing and the Path to Game Over</title>
      <link>https://cr0wtom.github.io/projects/research-talks-uds-fuzzing-troopers22/</link>
      <pubDate>Thu, 30 Jun 2022 16:56:46 +0100</pubDate>
      
      <guid>https://cr0wtom.github.io/projects/research-talks-uds-fuzzing-troopers22/</guid>
      <description>The automotive industry presented significant advances in the sector in the last decade, to catch up with the technological advances of the world. Lack of proper regulations and security standards meant that automotive companies had to develop custom solutions most of the time, which resulted in a lot of security issues. Security testing also fell behind, as there was no significant need till now to test and research those devices, but with more and more connected components the risks are increasing rapidly.</description>
    </item>
    
    <item>
      <title>GitHub - CaringCaribou DoIP Module</title>
      <link>https://cr0wtom.github.io/projects/github-doip-cc-module/</link>
      <pubDate>Thu, 24 Feb 2022 16:56:46 +0100</pubDate>
      
      <guid>https://cr0wtom.github.io/projects/github-doip-cc-module/</guid>
      <description>An enumeration and exploitation module for the UDS protocol on DoIP upon the ISO 13400-2, as a CaringCaribou contribution. It includes the following sub-functions:
discovery - Scan for arbitration IDs where ECUs listen and respond to incoming diagnostics requests services - Scan for diagnostics services supported by an ECU ecu_reset - Reset an ECU security_seed - Request security seeds from an ECU dump_dids - Dump data identifiers with the read_data_by_identifier UDS service testerpresent - Force an elevated diagnostics session against an ECU to stay active seed_randomness_fuzzer - ECUReset method fuzzing for seed randomness evaluation Project Link</description>
    </item>
    
    <item>
      <title>GitHub - CaringCaribou UDS Fuzzer Module</title>
      <link>https://cr0wtom.github.io/projects/github-uds_fuzzer-cc-module/</link>
      <pubDate>Wed, 24 Nov 2021 16:56:46 +0100</pubDate>
      
      <guid>https://cr0wtom.github.io/projects/github-uds_fuzzer-cc-module/</guid>
      <description>A fuzzing module for the UDS protocol, as a CaringCaribou contribution. It includes the following sub-functions:
seed_randomness_fuzzer: Supply the seed request process used by the target ECU and fuzz it to test for possible duplicates after a supplied Hard ECUReset (with flexibility on the reset method implementation), which means that the device is possibly vulnerable.
delay_fuzzer: This is more of an exploitation sub-function, where a seed request process is supplied, alongside the seed from a single seed/key pair that a tester has acquired.</description>
    </item>
    
  </channel>
</rss>
